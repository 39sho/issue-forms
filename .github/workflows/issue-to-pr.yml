# GitHub Actions workflow: convert an "expense" Issue into a Pull Request
# Save this file as .github/workflows/issue-to-pr.yml

name: Issue → PR (Expense)

on:
  issues:
    types: [opened]

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    # Quote the whole expression so YAML doesn't treat "*" as an anchor
    if: "contains(github.event.issue.labels.*.name, 'expense')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Parse Issue and generate expense file
        id: generate
        shell: bash
        run: |
          set -euo pipefail

          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_BODY="${{ github.event.issue.body }}"

          # Extract first date-like string (YYYY-MM-DD)
          DATE=$(grep -Eo '[0-9]{4}-[0-9]{2}-[0-9]{2}' <<<"$ISSUE_BODY" | head -n1)
          # Extract applicant: second token on the line beginning with 申請者
          APPLICANT=$(grep -i '^申請者' <<<"$ISSUE_BODY" | awk '{print $2}')

          if [[ -z "$DATE" || -z "$APPLICANT" ]]; then
            echo "::error::DATE or APPLICANT not found in the issue body" >&2
            exit 1
          fi

          DIR="expenses/${DATE:0:4}/${DATE:5:2}"
          mkdir -p "$DIR"
          FILE="$DIR/${DATE}-${APPLICANT}.yml"

          # Write stub YAML
          cat <<'EOF' >"$FILE"
          applicant: APPLICANT_PLACEHOLDER
          date: DATE_PLACEHOLDER
          issue: ISSUE_PLACEHOLDER
          raw: |
          EOF

          # Replace placeholders
          sed -i "s/APPLICANT_PLACEHOLDER/$APPLICANT/" "$FILE"
          sed -i "s/DATE_PLACEHOLDER/$DATE/" "$FILE"
          sed -i "s/ISSUE_PLACEHOLDER/$ISSUE_NUMBER/" "$FILE"

          # Append the body, indented two spaces
          echo "$ISSUE_BODY" | sed 's/^/  /' >>"$FILE"

          # Output path for next step
          echo "file=$FILE" >>"$GITHUB_OUTPUT"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: expense/${{ github.event.issue.number }}
          commit-message: |
            chore(expense): add ${{ steps.generate.outputs.file }} (closes #${{ github.event.issue.number }})
          title: "Expense #${{ github.event.issue.number }} – ${{ steps.generate.outputs.file }}"
          body: |
            Generated automatically from Issue #${{ github.event.issue.number }}  
            **Expense file**: `${{ steps.generate.outputs.file }}`  
            Closes #${{ github.event.issue.number }}
          labels: |
            expense
            pending-review
